name: State Manager Integration Tests

on:
  push:
    branches: [main]
    paths:
      - 'state-manager/**'
  pull_request:
    branches: [main]
    paths:
      - 'state-manager/**'

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          cache: true

      - name: Install dev dependencies with uv
        working-directory: state-manager
        run: |
          uv sync --group dev

      - name: Create test environment file
        working-directory: state-manager
        run: |
          cat > .env.test << EOF
          # Test Environment Configuration
          ENVIRONMENT=testing
          
          # MongoDB Configuration
          MONGO_URI=mongodb://admin:password@localhost:27017
          MONGO_DATABASE_NAME=test_exosphere_state_manager
          
          # API Configuration
          STATE_MANAGER_SECRET=test-secret-key
          EOF

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          timeout 60 bash -c 'until mongosh --host localhost:27017 --username admin --password password --authenticationDatabase admin --eval "db.runCommand(\"ping\")" > /dev/null 2>&1; do sleep 2; done'
          echo "MongoDB is ready!"

      - name: Run integration tests with pytest and coverage
        working-directory: state-manager
        env:
          MONGO_URI: mongodb://admin:password@localhost:27017
          MONGO_DATABASE_NAME: test_exosphere_state_manager
          STATE_MANAGER_SECRET: test-secret-key
          ENVIRONMENT: testing
        run: |
          uv run pytest tests/integration/ --cov=app --cov-report=xml --cov-report=term-missing -v --junitxml=integration-pytest-report.xml

      - name: Upload integration test coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: exospherehost/exospherehost
          files: state-manager/coverage.xml
          flags: state-manager-integration
          name: state-manager-integration-coverage-report
          fail_ci_if_error: true

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: state-manager-integration-test-results
          path: state-manager/integration-pytest-report.xml
          retention-days: 30

      - name: Run full test suite with coverage (unit + integration)
        working-directory: state-manager
        env:
          MONGO_URI: mongodb://admin:password@localhost:27017
          MONGO_DATABASE_NAME: test_exosphere_state_manager
          STATE_MANAGER_SECRET: test-secret-key
          ENVIRONMENT: testing
        run: |
          uv run pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing --cov-report=html -v --junitxml=full-pytest-report.xml

      - name: Upload full test coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: exospherehost/exospherehost
          files: state-manager/coverage.xml
          flags: state-manager-full
          name: state-manager-full-coverage-report
          fail_ci_if_error: true

      - name: Upload full test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: state-manager-full-test-results
          path: state-manager/full-pytest-report.xml
          retention-days: 30

      - name: Upload coverage HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: state-manager-coverage-html
          path: state-manager/htmlcov/
          retention-days: 30 